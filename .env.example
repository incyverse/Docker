#
#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#   GENERAL SETUP
#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#
#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   DOCKER:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
# Enter your Docker Host IP(will be appended to /etc/hosts). Default is `10.0.75.1`
DOCKER_HOST_IP=10.0.75.1

# If you are using Docker Sync.
# For OSX use `native_osx`, for Windows use `unison`, for Linux docker-sync is not required.
DOCKER_SYNC_STRATEGY=native_osx

# Select which docker-compose files to include.
# If using docker-sync append `:docker-compose.sync.yml` at the end
DOCKER_COMPOSE_FILE=docker-compose.yml

# Change the separator from: to; on Windows
DOCKER_COMPOSE_PATH_SEPARATOR=:

# A fix for Windows users, to ensure the application path works
DOCKER_COMPOSE_CONVERT_WINDOWS_PATHS=1

# Build and manage your Docker environment with ease
#DOCKER_PORTAINER=

# If have use https proxy please set to true.
# The Docker Registry implementation for storing and distributing Docker images.
DOCKER_REGISTRY_PORT=5000
DOCKER_REGISTRY_USE_SSL=false
DOCKER_REGISTRY_BROWSE_ONLY=false

# A browser-based solution for browsing and modifying a private Docker registry
# Portainer: Build and manage your Docker Environment with ease
DOCKER_WEBUI_PORT=8754
DOCKER_REGISTRY_WEBUI_HOST=docker-registry
DOCKER_REGISTRY_WEBUI_PORT=5000

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   DRIVER:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
# All networks driver
NETWORKS_DRIVER=bridge

# All volumes driver
VOLUMES_DRIVER=local

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   PROJECT ENVIRONMENT:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
# Define the prefix of container names.
# This is useful if you have multiple projects that use... to have separate container per project.
ENV_OS=ubuntu
ENV_OS_VERSION=22.04
ENV_PROFILE=local
ENV_LOCALE=ko_KR
ENV_LANG=en_US.UTF-8
ENV_TIMEZONE=UTC
ENV_PGID=1000
ENV_PUID=1000

# default: directory name
PROJECT_NAME=incyverse

# Set ORACLE INSTANT_CLIENT_MIRROR option if you want to use Intranet improve download, you can download files first
ORACLE_INSTANT_CLIENT_MIRROR=https://github.com/diogomascarenha/oracle-instantclient/raw/master/

# If you want to use "Oh My ZSH!" with project autocomplete plugin, set SHELL_OH_MY_ZSH to true.
SHELL_OH_MY_ZSH=false
#SHELL_OH_MY_ZSH_AUTOSUGESTIONS=false
#SHELL_OH_MY_ZSH_ALIASES=false

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   PATH:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
# Point to the path of your applications code on your host
APP_HOST_CODE_PATH=../

# Choose storage path on your machine. For all storage systems
APP_HOST_STORAGE=./docker-storage

# Point to where the `APP_HOST_CODE_PATH` should be in the container
APP_CONTAINER_CODE_PATH=/var/www

# You may add flags to the path `:cached`, `:delegated`. When using Docker sync add `:nocopy`
APP_CONTAINER_CODE_FLAG=:cached

APP_STATIC_PATH=../frontend
APP_DYNAMIC_PATH=../backend

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   SERVICE PORT NUMBER POLICY:
#   https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
# ANGULAR_SERVE_PORT=4200
# BROWSERSYNC_PORT=3000
# BROWSERSYNC_UI_PORT=3001
# ELASTICSEARCH_HTTP_PORT=9200
# ELASTICSEARCH_TRANSPORT_PORT=9300
FTP_PORT=21
# GITLAB_HTTP_PORT=8989
# GITLAB_HTTPS_PORT=9898
# GITLAB_SSH_PORT=2289
# GRAYLOG_PORT=9000
# GRAYLOG_SYSLOG_TCP_PORT=514
# GRAYLOG_SYSLOG_UDP_PORT=514
# GRAYLOG_GELF_TCP_PORT=12201
# GRAYLOG_GELF_UDP_PORT=12201
# JAVA_PORT=12001
# JENKINS_HTTP_PORT=8090
# JENKINS_SLAVE_AGENT_PORT=50000
# MARIADB_PORT=3306
# MEMCACHED_PORT=11211
# METABASE_PORT=3030
# MONGODB_PORT=27017
# MONGODB_WEBUI_PORT=3000
# MOSQUITTO_PORT=9001
MSSQL_PORT=1433
# MYSQL_PORT=3306
NGINX_UPSTREAM_PORT=9000
POSTGRESQL_PORT=5432
# REACT_SERVE_PORT=3000
# REACT_UI_PORT=3001
REDIS_CLUSTER_PORT_RANGE=7000-7005
REDIS_PORT=6379
REDIS_WEBUI_CONNECT_PORT=6379
REDIS_WEBUI_PORT=9987
# SQS_NODE_PORT=9324
# SQS_MANAGEMENT_HTTP_PORT=9325
SSH_PORT=22
# SWAGGER_EDITOR_PORT=5151
# SWAGGER_UI_PORT=5555
TEAMCITY_SERVER_PORT=8111
TOMCAT_HTTP_PORT=8080
VARNISH_PORT=6081
VARNISH_BACKEND_PORT=81
WEB_HTTP_PORT=80
WEB_HTTPS_PORT=443

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   SERVICE VERSION: 2023-04-17
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
APACHE_VERSION=2.4.57
# AST_VERSION=1.0.10
# CHROME_DRIVER_VERSION=2.42
# COMPOSER_VERSION=2
# ELASTICSEARCH_VERSION=8.1.0
# GRAYLOG_VERSION=4.2
# IMAGEMAGICK_VERSION=
# jenkins Official Image
# JENKINS_VERSION=2.60.3
# jenkins/jenkins
# JENKINS_VERSION=2.332.1-jdk8
# MARIADB_VERSION=10.7
# MEMCACHED_VERSION=latest
# MONGODB_VERSION=latest
MSSQL_VERSION=2022-latest
# MYSQL_VERSION=
NGINX_VERSION=1.23.4
NODE_VERSION=18.15.0
NVM_VERSION=0.39.3
# ubuntu
# OS_VERSION=20.04
# PHP_VERSION=
POSTGRESQL_VERSION=15.2
# PROTOC_VERSION=latest
REDIS_VERSION=7.0.11
TEAMCITY_SERVER_VERSION=2022.10.3-linux
TEAMCITY_AGENT_VERSION=2022.10.3-linux-sudo
TOMCAT_VERSION=11.0.0-jdk17
TOMCAT_CONNECTOR_VERSION=1.2.48
# SWAGGER_EDITOR_VERSION=v4.2.2
# SWAGGER_UI_VERSION=v4.10.3
YARN_VERSION=1.22.19




#
#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#   CONTAINER CUSTOMIZATION
#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#
#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   APPLICATION DEVELOPMENT PLATFORM:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: Firebase

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   CACHE ENGINES:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: Aerospike
#────: OPcache
#────: Redis
REDIS_PASSWORD=Strong(!)Password

#────: Redis Cluster

#────: Redis Web UI
REDIS_WEBUI_CONNECT_HOST=redis
REDIS_WEBUI_USERNAME=redis
REDIS_WEBUI_PASSWORD=Strong(!)Password

#────: Varnish
VARNISH_CONFIG=/etc/varnish/default.vcl
VARNISH_PARAMS="-p default_ttl=3600 -p default_grace=3600"


#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   DEVOPS: (Development Operations)
#       CI/CD (Continuous Integration / Continuous Deployment)
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: Confluence

#────: GitLab
# A single application for the entire software development lifecycle
GITLAB_DOMAIN_NAME=http://localhost
GITLAB_ROOT_PASSWORD=Strong(!)Password
GITLAB_POSTGRESQL_INIT=false
GITLAB_POSTGRESQL_DATABASE=gitlab
GITLAB_POSTGRESQL_HOST=postgresql
GITLAB_POSTGRESQL_USER=gitlab
GITLAB_POSTGRESQL_PASSWORD=Strong(!)Password

#────: GitLab Runner
GITLAB_CI_SERVER_URL=http://localhost:8989
GITLAB_RUNNER_REGISTRATION_TOKEN=
GITLAB_REGISTER_NON_INTERACTIVE=false

#────: Jenkins
# Automation server, that provides plugins to support building, deploying and automation any project
#   ../devops/jenkins_home
JENKINS_HOME=./jenkins/jenkins_home

#────: TeamCity
TEAMCITY_CONF_PATH=./teamcity-agent/conf
TEAMCITY_DIST_PATH=./teamcity-server/dist
TEAMCITY_SERVER_MEM_OPTS="-Xmx2g -XX:ReservedDodeCacheSize=350m"
TEAMCITY_POSTGRESQL_INIT=true
TEAMCITY_POSTGRESQL_DATABASE=teamcity
TEAMCITY_POSTGRESQL_HOST=
TEAMCITY_POSTGRESQL_USER=teamcity
TEAMCITY_POSTGRESQL_PASSWORD=Strong(!)Password

#────: SonarQube
# Continuous inspection of code quality to perform automatic reviews with static analysis of code to detect bugs and more

#────: Swagger
SWAGGER_API_URL=http://generator.swagger.io/api/swagger.json

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   DATABASE MANAGEMENT APPS:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: Adminer (MSSQL)
#────: Dejavu
# Edit your Elasticsearch data
#────: Kibana
# Visualize your Elasticsearch data and navigate the Elastic Stack
#────: LogStash
# Server-side data proccessing pipeline that ingests data from a mulitude of sources simultaneously
#────: Metabase (BI)
METABASE_DB_FILE=metabase.db
METABASE_JAVA_TIMEZONE=US/pacific

#────: MongoDB Web UI
MONGODB_WEBUI_INSTALL=false
MONGODB_WEBUI_ROOT_URL=http://localhost
MONGODB_WEBUI_URL=mongodb://mongo:27017/

#────: PgAmdin (PostgreSQL)
#────: PhpMyAdmin (MySQL, MariaDB)
# Accepted values: mariadb - mysql
#────: PostGIS
# Database extender for PostgreSQL. It adds support for geographic objects allowing location queries to be run in SQL

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   DATABASE MANAGEMENT SYSTEMS: Relational, NoSQL, GraphSQL, TextSQL
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: Cassandra
#────: ClickHouse (OLAP)
#────: CouchDB
#────: MariaDB
MARIADB_ROOT_PASSWORD=rootStrong(!)Password
MARIADB_PASSWORD=Strong(!)Password
MARIADB_ENTRYPOINT_INITDB=./dbms/mariadb/docker-entrypoint-initdb.d

#────: MongoDB

#────: MSSQL
MSSQL_PID=Express # Express, Enterprise
MSSQL_DATABASE=master
MSSQL_PASSWORD=Strong(!)Password
MSSQL_COLLATION=Korean_Wansung_CI_AS
MSSQL_ENTRYPOINT_INITDB=./dbms/mssql/docker-entrypoint-initdb.d

#────: MySQL
#────: Neo4j
#────: Percona

#────: PostgreSQL
POSTGRESQL_DATABASE=postgres
POSTGRESQL_USER=postgres
POSTGRESQL_PASSWORD=Strong(!)Password
POSTGRESQL_INITDB_ARGS="--auth-host=scram-sha-256 --auth-local=scram-sha-256"
POSTGRESQL_ENTRYPOINT_INITDB=./dbms/postgresql/docker-entrypoint-initdb.d
POSTGRESQL_CONF_PATH=./dbms/postgresql/conf

#────: RethinkDB
#────: SQLite

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   DISTRIBUTED SYSTEMS:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: Apache ZooKeeper
# Centralized service for distributed systems to a hierarchical key-value store

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   IDE`s:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: ICE Coder
#────: Theia
#────: Web IDE

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   LANGUAGE AND COMPILERS:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: HipHop Virtual Machine (HHVM)
#────: Node
#────: PHP
PHP_INTERPRETER=php-fpm
PHP_IDE_CONFIG=serverName=incyverse

#────: PHP FPM
#────: Kotlin
#────: Java

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   LOAD BALANCERS:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: HAProxy
#────: Traefik

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   LOG MANAGEMENT:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: GrayLog
# Password must be 16 characters long
GRAYLOG_PASSWORD=Strong(!)Password
# sha256 representation of the password by prefixing the project name
GRAYLOG_SHA256_PASSWORD=

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   MAIL SERVERS:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: MailCatcher
#────: MailDev
#────: Mailhog
#────: Mailu

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   MESSAGE BROKERS:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: Amazon Simple Queue Service (SQS)
#────: Beanstalkd
#────: Beanstalkd Admin Console
#────: Gearman
#────: Laravel Horizon
#────: Mosquitto
#────: PHP Worker
#────: RabbitMQ
#────: RabbitMQ Admin Console

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   MONITORING:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: Grafana
#────: NetData

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   SEARCH ENGINES:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: Apache Solr
#────: Dejavu
# Missing web UI for Elasticsearch
#────: ElasticSearch
#────: ManticoreSearch
#────: MeiliSearch

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   TESTING:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: Selenium

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   WEB APPLICATION SERVERS:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: Tomcat
TOMCAT_CONF_PATH=./app-server/tomcat/conf

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   WEB SERVERS:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: Apache2
APACHE_SSL_PATH=./web-server/apache2/ssl
APACHE_PATH=/usr/local/apache2
APACHE_DOCUMENT_ROOT=/usr/local/apache2/htdocs
APACHE_INSTALL_HTTP2=false
APACHE_INSTALL_TOMCAT_CONNECTOR=true

#────: Caddy

#────: NGINX
NGINX_CONF_PATH=./web-server/nginx/conf
NGINX_SITES_PATH=./web-server/nginx/sites
NGINX_SSL_PATH=./web-server/nginx/ssl
NGINX_UPSTREAM_CONTAINER=php-fpm

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   WORKSPACE:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
WORKSPACE_NPM_REGISTRY=
WORKSPACE_NPM_FETCH_RETRIES=2
WORKSPACE_NPM_FETCH_RETRY_FACTOR=10
WORKSPACE_NPM_FETCH_RETRY_MINTIMEOUT=10000
WORKSPACE_NPM_FETCH_RETRY_MAXTIMEOUT=10000
WORKSPACE_NVM_NODEJS_ORG_MIRROR=

WORKSPACE_INSTALL_GIT_PROMPT=true
WORKSPACE_INSTALL_LINUXBREW=false
WORKSPACE_INSTALL_MEMCACHED=false
WORKSPACE_INSTALL_NODE=true
WORKSPACE_INSTALL_PM2=false
WORKSPACE_INSTALL_PYTHON3=false
WORKSPACE_INSTALL_SSH=false
WORKSPACE_INSTALL_SUPERVISOR=false
WORKSPACE_INSTALL_YARN=true

#
#────────────────────────────────────────────────────────────────────────────────────────────────────
#   MISCELLANEOUS:
#────────────────────────────────────────────────────────────────────────────────────────────────────
#
#────: AWS EB ELI
# CLI that helps you deploy and manage your AWS Elastic Beanstalk applications and environments
#────: Blackfire
# Empowers all PHP developers and IT/Ops to continuously verify and improve their app's performance
# Create an account on blackfire.io. Don't enable blackfire and xDebug at the same time.
# Visit https://blackfire.io/docs/24-days/06-installation#install-probe-debian for more info.
#────: Certbot
# Automatically enable HTTPS on your website
#────: Docker Registry
# The Docker Registry implementation for storing and distributing Docker images
#────: Docker Web UI
# A browser-based solution for browsing and modifying a private Docker registry
#────: IPython
# Provides a rich architecture for interactive computing
#────: Jupyter Hub
# Jupyter notebook for multiple users
#────: Laravel Echo
# Bring the power of WebSockets to your Laravel applications
#────: Mercure
# Server-sent events
#────: Minio
# Cloud storage server released under Apache License v2, compatible with Amazon S3
#────: PHP CLI
#────: Portainer
# Build and manage your Docker environments with ease
#────: Thumbor
# Photo thumbnail service
