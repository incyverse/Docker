user        www-data; # Default: nobody, www www | nginx
# pid         /var/run/nginx.pid; # Default: logs/nginx.pid
# error_log   /var/log/nginx.error_log    info; # debug | info | notice | warn | error | crit

worker_processes        5; # Default: 1
worker_rlimit_nofile    8192;

events {
    worker_connections 1024;
    # use kqueue; # kqueue | rtsig | epoll | /dev/poll | select | poll
}

http {
    # include /etc/nginx/conf.d/mime.types;
    # include /etc/nginx/conf.d/proxy.conf;
    # include /etc/nginx/conf.d/fastcgi.conf;
    index   index.html index.htm index.php;

    default_type    application/octet-stream;
    log_format      main    '$remote_addr - $remote_user [$time_local]  $status '
        '"$request" $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
    # access_log      logs/access.log main;
    sendfile        on;
    tcp_nopush      on;
    gzip            on;

    server_names_hash_bucket_size   128; # this seems to be required for some vhosts
    keepalive_timeout   10;

    # Dynamic SSI
    # server {
    #     server_name     localhost;
    #     charset         utf-8;
    #     access_log      /var/log/nginx/access.log;
    #     root            /var/www;

    #     location = / {
    #         rewrite ^ /home redirect;
    #     }

    #     location / {
    #         ssi on;
    #         set $inc $request_uri;
    #         if (!-f $request_filename) {
    #             rewrite ^ /index.html last;
    #         }
    #         if (!-f $document_root$inc.html) {
    #             return 404;
    #         }
    #     }
    # }

    # php/fastcgi
    # server {
    #     listen      80;
    #     server_name php.com www.php.com;
    #     access_log  logs/php.access.log main;
    #     root        html;

    #     location ~ \.php$ {
    #         fastcgi_pass    127.0.0.1:1025;
    #     }
    # }

    # simple reverse-proxy
    # server {
    #     listen      80;
    #     server_name simple.com www.simple.com;
    #     access_log  logs/simple.access.log  main;

    #     # serve static files
    #     location ~ ^/(images|javascript|js|css|media|static)/ {
    #         root    /var/www/virtual/big.server.com/htdocs;
    #         expires 30d;
    #     }

    #     # pass requests for dynamic content to rails/turbogears/zope, et al
    #     location / {
    #         proxy_pass  http://127.0.0.1:8080;
    #     }
    # }

    # simple load balancing
    # server {
    #     listen      80;
    #     server_name balancing.com;
    #     access_log  logs/balancing.access.log   main;

    #     location / {
    #         proxy_pass
    #     }
    # }
}
