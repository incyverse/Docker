#!/bin/bash
#
# Copy createdb.sh.example to createdb.sh
# then uncomment then set database name and username to create you need databases
#
# example: .env POSTGRES_USER=appuser and need db name is myshop_db
# 
#    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
#        CREATE USER myuser WITH PASSWORD 'mypassword';
#        CREATE DATABASE myshop_db;
#        GRANT ALL PRIVILEGES ON DATABASE myshop_db TO myuser;
#    EOSQL
#
# this sh script will auto run when the postgres container starts and the $DATA_PATH_HOST/postgres not found.
#
# 
# psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
#     CREATE USER db1 WITH PASSWORD 'db1';
#     CREATE DATABASE db1;
#     GRANT ALL PRIVILEGES ON DATABASE db1 TO db1;
# EOSQL
# 
# psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
#     CREATE USER db2 WITH PASSWORD 'db2';
#     CREATE DATABASE db2;
#     GRANT ALL PRIVILEGES ON DATABASE db2 TO db2;
# EOSQL
# 
# psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
#     CREATE USER db3 WITH PASSWORD 'db3';
#     CREATE DATABASE db3;
#     GRANT ALL PRIVILEGES ON DATABASE db3 TO db3;
# EOSQL








# 시퀀스 초기화 방법
# ALTER SEQUENCE items_code_seq RESTART WITH 1;
# TRUNCATE TABLE items RESTART IDENTITY CASCADE;


# DROP SEQUENCE IF EXISTS users_code_seq CASCADE;



# CREATE SEQUENCE IF NOT EXISTS users_code_seq INCREMENT 1 MINVALUE 000000 START WITH 000001;
# ALTER SEQUENCE IF EXISTS users_code_seq OWNER TO kh_mes;
# GRANT ALL ON SEQUENCE users_code_seq TO kh_mes;
# SELECT setval('users_code_seq', 000000);

# DROP TABLE IF EXISTS users, user_meta CASCADE;
# CREATE TABLE IF NOT EXISTS users
# (
#     id              BIGSERIAL       NOT NULL,
#     code            CHAR(6)         NOT NULL    DEFAULT to_char(nextval('users_code_seq'::regclass), '00000'::text),
#     avatar          VARCHAR(255),
#     login           VARCHAR(50)     NOT NULL    DEFAULT ''::CHARACTER VARYING,
#     pass            VARCHAR(50)     NOT NULL    DEFAULT ''::CHARACTER VARYING,
#     name            VARCHAR(50)     NOT NULL    DEFAULT ''::CHARACTER VARYING,
#     contact         VARCHAR(20)     NOT NULL    DEFAULT ''::CHARACTER VARYING,
#     position        BIGINT                      DEFAULT 0,
#     nationality     BIGINT                      DEFAULT 0,
#     gender          BIGINT                      DEFAULT 0,
#     manager         BIGINT                      DEFAULT 0,
#     CONSTRAINT users_pk PRIMARY KEY (id)
# );
# COMMENT ON COLUMN users.code IS '사용자 코드';
# COMMENT ON COLUMN users.avatar IS '사용자 사진';
# COMMENT ON COLUMN users.login IS '로그인 아이디';
# COMMENT ON COLUMN users.pass IS '로그인 비밀번호';
# COMMENT ON COLUMN users.name IS '사용자 이름';
# COMMENT ON COLUMN users.contact IS '사용자 연락처';
# COMMENT ON COLUMN users.position IS '사용자 직급';
# COMMENT ON COLUMN users.nationality IS '사용자 국적';
# COMMENT ON COLUMN users.gender IS '사용자 성별';
# COMMENT ON COLUMN users.manager IS '사용자 담당자';
# CREATE UNIQUE INDEX users_login_udx ON users(login);
# CREATE INDEX users_name_idx ON users(name);
# ALTER TABLE IF EXISTS users OWNER TO kh_mes;
# GRANT ALL ON users TO kh_mes;