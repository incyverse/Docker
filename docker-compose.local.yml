version: "3.9"

networks:
  frontend:
    name: ${ENV_NAME}_frontend
    driver: ${NETWORKS_DRIVER}
  backend:
    name: ${ENV_NAME}_backend
    driver: ${NETWORKS_DRIVER}

volumes:
  docker-in-docker:
    name: ${ENV_NAME}_dind
    driver: ${VOLUMES_DRIVER}

services:
  docker-in-docker:
    container_name: ${ENV_NAME}-dind
    image: docker:20.10-dind
    privileged: true
    environment:
      - DOCKER_TLS_SAN=DNS:docker-in-docker
    volumes:
      - ${APP_HOST_CODE_PATH}:${APP_CONTAINER_CODE_PATH}
      - docker-in-docker:/certs/client
    expose:
      - 2375
    networks:
      - backend

  #
  #───────────────────────────────────────────────────────────────────────────────
  # WORKSPACE:
  #───────────────────────────────────────────────────────────────────────────────
  #
  workspace:
    container_name: ${ENV_NAME}-workspace
    image: ${ENV_NAME}_workspace
    tty: true
    build:
      context: ./workspace
      dockerfile: ${ENV_OS}.local.Dockerfile
      args:
        - OS_VERSION=${OS_VERSION}
        - ENV_NAME=${ENV_NAME}
        # - ENV_MODE=${ENV_MODE}
        - PGID=${ENV_PGID}
        - PUID=${ENV_PUID}
        - TZ=${ENV_TIMEZONE}
        - http_proxy
        - https_proxy
        - no_proxy
    environment:
      - DOCKER_HOST=tcp://docker-in-docker:2375
      - DOCKER_TLS_VERIFY=1
      - DOCKER_TLS_CERTDIR=/certs
      - DOCKER_CERT_PATH=/certs/client
    volumes:
      - ${APP_HOST_CODE_PATH}:${APP_CONTAINER_CODE_PATH}${APP_CONTAINER_CODE_FLAG}
      - docker-in-docker:/certs/client
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    ports:
      - "${SSH_PORT}:22"
    networks:
      - frontend
      - backend
    links:
      - docker-in-docker

  #
  #───────────────────────────────────────────────────────────────────────────────
  # CACHE:
  #───────────────────────────────────────────────────────────────────────────────
  #
  redis:
    container_name: ${ENV_NAME}-redis
    build:
      context: ./cache/redis
    volumes:
      - ${APP_HOST_DATA_PATH}/redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

  #
  #───────────────────────────────────────────────────────────────────────────────
  # CI/CD:
  #───────────────────────────────────────────────────────────────────────────────
  #
  teamcity:
    container_name: ${ENV_NAME}-teamcity
    privileged: true
    build:
      context: ./cicd/teamcity
      args:
        - ENV_NAME=${ENV_NAME}
        - TZ=${ENV_TIMEZONE}
        - PGID=${ENV_PGID}
        - PUID=${ENV_PUID}
        - TEAMCITY_VERSION=${TEAMCITY_VERSION}
        - TEAMCITY_SERVER_MEM_OPTS=${TEAMCITY_SERVER_MEM_OPTS}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_HOST_DATA_PATH}/teamcity/data:/data/teamcity_server/datadir
      - ${APP_HOST_DATA_PATH}/teamcity/temp:/opt/teamcity/temp
      - ${APP_HOST_DATA_PATH}/teamcity/logs:/opt/teamcity/logs
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "${TEAMCITY_PORT}:8111"
    networks:
      - frontend
      - backend

  #
  #───────────────────────────────────────────────────────────────────────────────
  # WAS:
  #───────────────────────────────────────────────────────────────────────────────
  #
  tomcat:
    container_name: tomcat
    image: tomcat:latest
    # restart: always
    volumes:
      - ${APP_HOST_DATA_PATH}/tomcat/webapps:/usr/local/tomcat/webapps
      - ${APP_HOST_DATA_PATH}/tomcat/logs:/usr/local/tomcat/logs
    ports:
      - "${TOMCAT_HOST_HTTP_PORT}:8080"
    networks:
      - frontend
      - backend