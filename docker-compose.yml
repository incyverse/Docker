version: "3.9"

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  docker-in-docker:
    driver: ${VOLUMES_DRIVER}

services:
  docker-in-docker:
    container_name: DinD
    image: docker:20.10-dind
    privileged: true
    environment:
      DOCKER_TLS_SAN: DNS:docker-in-docker
    volumes:
      - ${APP_HOST_CODE_PATH}:${APP_CONTAINER_CODE_PATH}
      - docker-in-docker:/certs/client
    expose:
      - 2375
    networks:
      - backend

  #
  #───────────────────────────────────────────────────────────────────────────────
  # WORKSPACE:
  #───────────────────────────────────────────────────────────────────────────────
  #
  workspace:
    container_name: Workspace
    image: workspace:${ENV_OS}-${OS_VERSION}
    tty: true
    build:
      context: ./workspace
      dockerfile: ${ENV_OS}.Dockerfile
      args:
        - OS_VERSION=${OS_VERSION}
        - TZ=${ENV_TIMEZONE}
        - GROUP=${PROJECT_NAME}
        - USER=${PROJECT_NAME}
        - PGID=${ENV_PGID}
        - PUID=${ENV_PUID}
        - NODE_VERSION=${NODE_VERSION}
        - NVM_VERSION=${NVMSH_VERSION}
        - NPM_REGISTRY=${WORKSPACE_NPM_REGISTRY}
        - NPM_FETCH_RETRIES=${WORKSPACE_NPM_FETCH_RETRIES}
        - NPM_FETCH_RETRY_FACTOR=${WORKSPACE_NPM_FETCH_RETRY_FACTOR}
        - NPM_FETCH_RETRY_MINTIMEOUT=${WORKSPACE_NPM_FETCH_RETRY_MINTIMEOUT}
        - NPM_FETCH_RETRY_MAXTIMEOUT=${WORKSPACE_NPM_FETCH_RETRY_MAXTIMEOUT}
        - NVM_NODEJS_ORG_MIRROR=${WORKSPACE_NVM_NODEJS_ORG_MIRROR}
        - YARN_VERSION=${YARN_VERSION}
        - INSTALL_GIT_PROMPT=${WORKSPACE_INSTALL_GIT_PROMPT}
        - INSTALL_LINUXBREW=${WORKSPACE_INSTALL_LINUXBREW}
        - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
        - INSTALL_PYTHON3=${WORKSPACE_INSTALL_PYTHON3}
        - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}
        - INSTALL_SSH=${WORKSPACE_INSTALL_SSH}
        - INSTALL_SUPERVISOR=${WORKSPACE_INSTALL_SUPERVISOR}
        - http_proxy
        - https_proxy
        - no_proxy
    environment:
      - DOCKER_HOST=tcp://docker-in-docker:2375
      - DOCKER_TLS_VERIFY=1
      - DOCKER_TLS_CERTDIR=/certs
      - DOCKER_CERT_PATH=/certs/client
    volumes:
      - ${APP_HOST_CODE_PATH}:${APP_CONTAINER_CODE_PATH}${APP_CONTAINER_CODE_FLAG}
      - docker-in-docker:/certs/client
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    ports:
      - "${SSH_PORT}:22"
    networks:
      - frontend
      - backend
    links:
      - docker-in-docker

  #
  #───────────────────────────────────────────────────────────────────────────────
  # DATABASE MANAGEMENT SYSTEM:
  #───────────────────────────────────────────────────────────────────────────────
  #
  #────: MSSQL
  mssql:
    container_name: MSSQL
    image: mssql:${MSSQL_VERSION}
    build:
      context: ./dbms/mssql
      args:
        - MSSQL_VERSION=${MSSQL_VERSION}
    environment:
      - TZ=${ENV_TIMEZONE}
      - MSSQL_PID=${MSSQL_PID}
      - MSSQL_DATABASE=${MSSQL_DATABASE}
      - MSSQL_COLLATION=${MSSQL_COLLATION}
      - SA_PASSWORD=${PROJECT_NAME}${MSSQL_PASSWORD}
      - ACCEPT_EULA=Y
    volumes:
      - ${APP_HOST_STORAGE}/${PROJECT_NAME}/mssql:/var/opt/mssql
    ports:
      - "${MSSQL_PORT}:1433"
    networks:
      - backend

  #
  #───────────────────────────────────────────────────────────────────────────────
  # WEB APPLICATION SERVER:
  #───────────────────────────────────────────────────────────────────────────────
  #
  #────: Tomcat
  tomcat:
    container_name: Tomcat
    image: tomcat:${TOMCAT_VERSION}
    build: 
      context: ./app-server/tomcat
      args:
        - TOMCAT_VERSION=${TOMCAT_VERSION}
    volumes:
      - ${APP_HOST_STORAGE}/${PROJECT_NAME}/tomcat/webapps:${TOMCAT_PATH}/webapps
      - ${APP_HOST_STORAGE}/${PROJECT_NAME}/tomcat/logs:${TOMCAT_PATH}/logs
      - ./app-server/tomcat/conf:${TOMCAT_PATH}/conf
    ports:
      - "${TOMCAT_HTTP_PORT}:8080"
    networks:
      - frontend
      - backend

  #
  #───────────────────────────────────────────────────────────────────────────────
  # WEB SERVER:
  #───────────────────────────────────────────────────────────────────────────────
  #
  #────: Apache
  apache:
    container_name: Apache
    image: apache:${APACHE_VERSION}
    build: 
      context: ./web-server/apache2
      args:
        - APACHE_VERSION=${APACHE_VERSION}
        - APACHE_PATH=${APACHE_PATH}
        - CONNECTOR_VERSION=${TOMCAT_CONNECTOR_VERSION}
        - DOCUMENT_ROOT=${APACHE_DOCUMENT_ROOT}
        - INSTALL_HTTP2=${APACHE_INSTALL_HTTP2}
        - INSTALL_TOMCAT_CONNECTOR=${APACHE_INSTALL_TOMCAT_CONNECTOR}
    volumes:
      - ${APP_HOST_CODE_PATH}:${APP_CONTAINER_CODE_PATH}${APP_CONTAINER_CODE_FLAG}
      - ${APP_HOST_STORAGE}/${PROJECT_NAME}/apache/logs:${APACHE_PATH}/logs
      - ${APACHE_SITES_PATH}:${APACHE_PATH}/conf/sites-available
      # - ${APACHE_SSL_PATH}:/etc/apache2/ssl
      - ./web-server/apache2/conf:${APACHE_PATH}/conf
    ports:
      - "${WEB_HTTP_PORT}:80"
      - "${WEB_HTTPS_PORT}:443"
    networks:
      - frontend
      - backend
    links:
      - tomcat
    depends_on:
      - workspace